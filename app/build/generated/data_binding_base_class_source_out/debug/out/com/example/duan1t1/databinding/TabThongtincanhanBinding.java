// Generated by view binder compiler. Do not edit!
package com.example.duan1t1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.duan1t1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TabThongtincanhanBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout llDangxuat;

  @NonNull
  public final LinearLayout llDiaChi;

  @NonNull
  public final LinearLayout llDoimatkhau;

  @NonNull
  public final LinearLayout llLichnap;

  @NonNull
  public final LinearLayout llLichsumua;

  @NonNull
  public final LinearLayout llThongtincanhan;

  private TabThongtincanhanBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout llDangxuat, @NonNull LinearLayout llDiaChi,
      @NonNull LinearLayout llDoimatkhau, @NonNull LinearLayout llLichnap,
      @NonNull LinearLayout llLichsumua, @NonNull LinearLayout llThongtincanhan) {
    this.rootView = rootView;
    this.llDangxuat = llDangxuat;
    this.llDiaChi = llDiaChi;
    this.llDoimatkhau = llDoimatkhau;
    this.llLichnap = llLichnap;
    this.llLichsumua = llLichsumua;
    this.llThongtincanhan = llThongtincanhan;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TabThongtincanhanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TabThongtincanhanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tab_thongtincanhan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TabThongtincanhanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_dangxuat;
      LinearLayout llDangxuat = ViewBindings.findChildViewById(rootView, id);
      if (llDangxuat == null) {
        break missingId;
      }

      id = R.id.ll_diaChi;
      LinearLayout llDiaChi = ViewBindings.findChildViewById(rootView, id);
      if (llDiaChi == null) {
        break missingId;
      }

      id = R.id.ll_doimatkhau;
      LinearLayout llDoimatkhau = ViewBindings.findChildViewById(rootView, id);
      if (llDoimatkhau == null) {
        break missingId;
      }

      id = R.id.ll_lichnap;
      LinearLayout llLichnap = ViewBindings.findChildViewById(rootView, id);
      if (llLichnap == null) {
        break missingId;
      }

      id = R.id.ll_lichsumua;
      LinearLayout llLichsumua = ViewBindings.findChildViewById(rootView, id);
      if (llLichsumua == null) {
        break missingId;
      }

      id = R.id.ll_thongtincanhan;
      LinearLayout llThongtincanhan = ViewBindings.findChildViewById(rootView, id);
      if (llThongtincanhan == null) {
        break missingId;
      }

      return new TabThongtincanhanBinding((ConstraintLayout) rootView, llDangxuat, llDiaChi,
          llDoimatkhau, llLichnap, llLichsumua, llThongtincanhan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
