// Generated by view binder compiler. Do not edit!
package com.example.duan1t1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.duan1t1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListSanphamMuaBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imvAnhSpCt;

  @NonNull
  public final TextView tvGiaCt;

  @NonNull
  public final TextView tvMaspCt;

  @NonNull
  public final TextView tvSoluongCt;

  @NonNull
  public final TextView tvSoluongTrongKhoCt;

  @NonNull
  public final TextView tvTenspCt;

  private ItemListSanphamMuaBinding(@NonNull LinearLayout rootView, @NonNull ImageView imvAnhSpCt,
      @NonNull TextView tvGiaCt, @NonNull TextView tvMaspCt, @NonNull TextView tvSoluongCt,
      @NonNull TextView tvSoluongTrongKhoCt, @NonNull TextView tvTenspCt) {
    this.rootView = rootView;
    this.imvAnhSpCt = imvAnhSpCt;
    this.tvGiaCt = tvGiaCt;
    this.tvMaspCt = tvMaspCt;
    this.tvSoluongCt = tvSoluongCt;
    this.tvSoluongTrongKhoCt = tvSoluongTrongKhoCt;
    this.tvTenspCt = tvTenspCt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListSanphamMuaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListSanphamMuaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_sanpham_mua, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListSanphamMuaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imv_anh_sp_ct;
      ImageView imvAnhSpCt = ViewBindings.findChildViewById(rootView, id);
      if (imvAnhSpCt == null) {
        break missingId;
      }

      id = R.id.tv_Gia_ct;
      TextView tvGiaCt = ViewBindings.findChildViewById(rootView, id);
      if (tvGiaCt == null) {
        break missingId;
      }

      id = R.id.tv_Masp_ct;
      TextView tvMaspCt = ViewBindings.findChildViewById(rootView, id);
      if (tvMaspCt == null) {
        break missingId;
      }

      id = R.id.tv_Soluong_ct;
      TextView tvSoluongCt = ViewBindings.findChildViewById(rootView, id);
      if (tvSoluongCt == null) {
        break missingId;
      }

      id = R.id.tv_SoluongTrongKho_ct;
      TextView tvSoluongTrongKhoCt = ViewBindings.findChildViewById(rootView, id);
      if (tvSoluongTrongKhoCt == null) {
        break missingId;
      }

      id = R.id.tv_Tensp_ct;
      TextView tvTenspCt = ViewBindings.findChildViewById(rootView, id);
      if (tvTenspCt == null) {
        break missingId;
      }

      return new ItemListSanphamMuaBinding((LinearLayout) rootView, imvAnhSpCt, tvGiaCt, tvMaspCt,
          tvSoluongCt, tvSoluongTrongKhoCt, tvTenspCt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
